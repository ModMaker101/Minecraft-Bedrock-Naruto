"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const createFiberRoot_1 = require("./createFiberRoot");
const createPortal_1 = require("./createPortal");
const createReconciler_1 = require("./createReconciler");
document.body.innerHTML = `<div id="root"></div><div id="portal"></div>`;
const reconcilerInstance = (0, createReconciler_1.createReconciler)();
const root = document.getElementById('root');
const portal = document.getElementById('portal');
const fiberRoot = (0, createFiberRoot_1.createFiberRoot)(reconcilerInstance)(root);
/**
 * Render function local to testing that shared the same instance of the reconciler.
 *
 * This is needed otherwise React complains that we are sharing a context across different renderers.
 */
const render = function render(ui) {
    reconcilerInstance.updateContainer(ui, fiberRoot, null, () => { });
};
afterEach(() => {
    reconcilerInstance.updateContainer(null, fiberRoot, null, () => { });
});
it('portals content', () => {
    const TestComponent = () => {
        return react_1.default.createElement("div", null, "On the other side");
    };
    render(react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", null, "Hello World"),
        (0, createPortal_1.createPortal)(react_1.default.createElement(TestComponent, null), portal)));
    expect(root).toContainHTML('<div id="root"><div>Hello World</div></div>');
    expect(portal).toContainHTML('<div id="portal"><div>On the other side</div></div>');
});
//# sourceMappingURL=createPortal.spec.js.map