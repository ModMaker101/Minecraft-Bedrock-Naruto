"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useFacetState = void 0;
const react_1 = require("react");
const equalityChecks_1 = require("../equalityChecks");
const facet_1 = require("../facet");
/**
 * Provides a parallel to React's useState, but instead returns a facet as the value
 *
 * @param initialValue mandatory initial value (pass NO_VALUE to force it to be uninitialized)
 * @param equalityCheck optional (has a default checker)
 */
const useFacetState = (initialValue, equalityCheck = equalityChecks_1.defaultEqualityCheck) => {
    return (0, react_1.useMemo)(() => {
        const inlineFacet = (0, facet_1.createFacet)({ initialValue, equalityCheck });
        const setter = (setter) => {
            if (isSetterCallback(setter)) {
                inlineFacet.setWithCallback(setter);
            }
            else {
                inlineFacet.set(setter);
            }
        };
        return [inlineFacet, setter];
        /**
         * We ignore the changes to the initialValue since changes to the facet
         * done after creation must only be done through the setter, and we want
         * to ensure not to accidentally put more values in memory.
         */
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
};
exports.useFacetState = useFacetState;
const isSetterCallback = (setter) => {
    return typeof setter === 'function';
};
//# sourceMappingURL=useFacetState.js.map