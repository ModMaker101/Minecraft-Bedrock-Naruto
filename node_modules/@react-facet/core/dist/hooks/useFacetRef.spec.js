"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const dom_fiber_testing_library_1 = require("@react-facet/dom-fiber-testing-library");
const useFacetRef_1 = require("./useFacetRef");
const facet_1 = require("../facet");
const __1 = require("..");
it('passes a value into the ref', () => {
    const mockFacet = (0, facet_1.createFacet)({ initialValue: 'value' });
    let ref = (0, react_1.createRef)();
    const ComponentWithFacetEffect = () => {
        ref = (0, useFacetRef_1.useFacetRef)(mockFacet);
        expect(ref.current).toBe('value');
        return react_1.default.createElement("span", null);
    };
    (0, dom_fiber_testing_library_1.render)(react_1.default.createElement(ComponentWithFacetEffect, null));
    expect(ref.current).toBe('value');
    mockFacet.set('changed');
    expect(ref.current).toBe('changed');
});
it('should default to no NO_VALUE', () => {
    const mockFacet = (0, facet_1.createFacet)({ initialValue: __1.NO_VALUE });
    let ref = (0, react_1.createRef)();
    const ComponentWithFacetEffect = () => {
        ref = (0, useFacetRef_1.useFacetRef)(mockFacet);
        expect(ref.current).toBe(__1.NO_VALUE);
        return react_1.default.createElement("span", null);
    };
    (0, dom_fiber_testing_library_1.render)(react_1.default.createElement(ComponentWithFacetEffect, null));
    expect(ref.current).toBe(__1.NO_VALUE);
    mockFacet.set('value');
    expect(ref.current).toBe('value');
});
it('should be able to set a default value', () => {
    const mockFacet = (0, facet_1.createFacet)({ initialValue: __1.NO_VALUE });
    let ref = (0, react_1.createRef)();
    const ComponentWithFacetEffect = () => {
        ref = (0, useFacetRef_1.useFacetRef)(mockFacet, 'fallback');
        expect(ref.current).toBe('fallback');
        return react_1.default.createElement("span", null);
    };
    (0, dom_fiber_testing_library_1.render)(react_1.default.createElement(ComponentWithFacetEffect, null));
    expect(ref.current).toBe('fallback');
    mockFacet.set('value');
    expect(ref.current).toBe('value');
});
it('should ignore the default state if the facet has a value', () => {
    const mockFacet = (0, facet_1.createFacet)({ initialValue: 'initialValue' });
    let ref = (0, react_1.createRef)();
    const ComponentWithFacetEffect = () => {
        ref = (0, useFacetRef_1.useFacetRef)(mockFacet, 'fallback');
        expect(ref.current).toBe('initialValue');
        return react_1.default.createElement("span", null);
    };
    (0, dom_fiber_testing_library_1.render)(react_1.default.createElement(ComponentWithFacetEffect, null));
    expect(ref.current).toBe('initialValue');
    mockFacet.set('value');
    expect(ref.current).toBe('value');
});
//# sourceMappingURL=useFacetRef.spec.js.map