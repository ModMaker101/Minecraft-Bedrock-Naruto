"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useFacetWrap = void 0;
const react_1 = require("react");
const equalityChecks_1 = require("../equalityChecks");
const facet_1 = require("../facet");
const types_1 = require("../types");
/**
 * Wraps a FacetProp as a Facet
 * @param value
 */
function useFacetWrap(prop, equalityCheck = equalityChecks_1.defaultEqualityCheck) {
    const is = (0, types_1.isFacet)(prop);
    /**
     * Inline facet that only created if the provided prop is not a facet.
     *
     * We ignore the dependency change of `prop` since we want to update the inline
     * facet value via the setter below.
     */
    const inlineFacet = (0, react_1.useMemo)(() => (is ? undefined : (0, facet_1.createFacet)({ initialValue: prop, equalityCheck })), 
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [is]);
    if (inlineFacet === undefined) {
        return prop;
    }
    else {
        inlineFacet.set(prop);
        return inlineFacet;
    }
}
exports.useFacetWrap = useFacetWrap;
//# sourceMappingURL=useFacetWrap.js.map