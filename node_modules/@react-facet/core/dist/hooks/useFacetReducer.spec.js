"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const dom_fiber_testing_library_1 = require("@react-facet/dom-fiber-testing-library");
const types_1 = require("../types");
const useFacetReducer_1 = require("./useFacetReducer");
it('supports passing a reducer that takes actions to update the facet value', () => {
    const initialState = 0;
    function reducer(state, action) {
        state = state === types_1.NO_VALUE ? 0 : state;
        switch (action) {
            case 'increment':
                return state + 1;
            case 'decrement':
                return state - 1;
            default:
                throw new Error();
        }
    }
    function Counter() {
        const [state, dispatch] = (0, useFacetReducer_1.useFacetReducer)(reducer, initialState);
        return (react_1.default.createElement(react_1.default.Fragment, null,
            react_1.default.createElement("fast-text", { text: state }),
            react_1.default.createElement("button", { "data-testid": "decrement", onClick: () => dispatch('decrement') }),
            react_1.default.createElement("button", { "data-testid": "increment", onClick: () => dispatch('increment') })));
    }
    const { container, getByTestId } = (0, dom_fiber_testing_library_1.render)(react_1.default.createElement(Counter, null));
    expect(container.textContent).toBe('0');
    (0, dom_fiber_testing_library_1.fireEvent)(getByTestId('increment'), new MouseEvent('click', {
        bubbles: true,
        cancelable: true,
    }));
    expect(container.textContent).toBe('1');
    (0, dom_fiber_testing_library_1.fireEvent)(getByTestId('decrement'), new MouseEvent('click', {
        bubbles: true,
        cancelable: true,
    }));
    expect(container.textContent).toBe('0');
});
//# sourceMappingURL=useFacetReducer.spec.js.map